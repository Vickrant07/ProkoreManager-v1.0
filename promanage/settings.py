"""
Django settings for promanage project.

Generated by 'django-admin startproject' using Django 4.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

load_dotenv(BASE_DIR / '.env')

LD_LIBRARY_PATH="/usr/local/lib"
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/


# =============================
# Django Project Settings File
# =============================
#
# This file contains all the configuration for your Django project.
# It is divided into logical sections for clarity and maintainability.
#
# For more information, see:
# https://docs.djangoproject.com/en/4.2/topics/settings/
#

# =============================
# Security & Environment
# =============================
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY')  # Loaded from .env for security

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True  # Set to True only for local development

# Hosts/domain names that are valid for this site
ALLOWED_HOSTS = [ 
    'prokore-manager.onrender.com',  # Your production domain
    '*',  # Remove '*' in production for better security
]

# =============================
# Application Definition
# =============================
INSTALLED_APPS = [
    'procoreapi',  # Your custom app for Procore integration
    'django.contrib.admin',  # Django admin interface
    'django.contrib.auth',  # Authentication framework
    'django.contrib.contenttypes',  # Content type system
    'django.contrib.sessions',  # Session framework
    'django.contrib.messages',  # Messaging framework
    'django.contrib.sites',  # Sites framework
    'whitenoise.runserver_nostatic',  # Whitenoise for static files
    'django.contrib.staticfiles',  # Static files (CSS, JS, Images)
    'rest_framework',  # Django REST Framework
    'accounts',  # Custom user accounts app
]

# Site ID for django.contrib.sites
SITE_ID = 1

# =============================
# Middleware
# =============================
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',  # Security enhancements
    'whitenoise.middleware.WhiteNoiseMiddleware',  # Serve static files efficiently
    'django.contrib.sessions.middleware.SessionMiddleware',  # Session management
    'django.middleware.common.CommonMiddleware',  # Common HTTP features
    'django.middleware.csrf.CsrfViewMiddleware',  # CSRF protection
    'django.contrib.auth.middleware.AuthenticationMiddleware',  # User authentication
    'django.contrib.messages.middleware.MessageMiddleware',  # Messaging
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Clickjacking protection
]

# =============================
# URL Configuration
# =============================
ROOT_URLCONF = 'promanage.urls'

# =============================
# Templates
# =============================
# By default Django looks at each app's templates/ folder.
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ 
            BASE_DIR/'templates',  # Global templates
            BASE_DIR/'procoreapi/templates',  # API-specific templates
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# =============================
# WSGI Application
# =============================
WSGI_APPLICATION = 'promanage.wsgi.application'

# =============================
# Database
# =============================
# Default: SQLite (for development). Use PostgreSQL or MySQL in production.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / "database",
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = '/static/' 

if DEBUG:
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    STATICFILES_DIRS = [
        BASE_DIR / 'static',
        BASE_DIR / 'procoreapi/static',
    ]
else:
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
    STATICFILES_DIRS = [
        BASE_DIR / 'static',
        BASE_DIR / 'procoreapi/static',
    ]
    STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGIN_URL = '/login/'
LOGIN_REDIRECT_URL = '/dashboard/'
LOGOUT_REDIRECT_URL = "login" 


## Custom Authentication Backend
# This allows authentication using email instead of username
AUTHENTICATION_BACKENDS = ['procoreapi.auth_backends.EmailBackend']


# For development (prints emails to console)
# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# For production (uses SMTP)

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'mail.smtp2go.com'
EMAIL_PORT = 2525
EMAIL_USE_TLS = True  # Use TLS for security
EMAIL_USE_SSL = False  # Do not use SSL, as TLS is preferred
DEFAULT_FROM_EMAIL = 'vickrantbawankule@koreretrofit.com' # Default email address for various automated correspondence
EMAIL_HOST_USER = 'koreretrofit.com'  # Your email address
EMAIL_HOST_PASSWORD = 'vJUJmKNFMTj2Y7sI' # Your email app password (not your regular password)

# You might also want to set these:
SERVER_EMAIL = EMAIL_HOST_USER # For error messages to admins
ADMINS = [('Vickrant B', EMAIL_HOST_USER)] # For site admins to receive error notifications
MANAGERS = ADMINS

# Message storage backend
# This is used to store messages in the session
# so they can be displayed to the user after a redirect
MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'